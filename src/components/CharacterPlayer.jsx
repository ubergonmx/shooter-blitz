/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/Character_Bond.gltf -o src/components/CharacterPlayer.jsx -r public 
*/

import React, { useEffect, useMemo, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { LoopOnce } from "three";

import { SkeletonUtils } from "three-stdlib";
import { useGraph } from "@react-three/fiber";

export function CharacterPlayer({
  character = "Bond",
  animation = "Idle",
  ...props
}) {
  const group = useRef();
  const { scene, materials, animations } = useGLTF(
    `/models/Character_${character}.glb`
  );

  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes } = useGraph(clone);

  const { actions } = useAnimations(animations, group);
  if (actions["Death"]) {
    actions["Death"].loop = LoopOnce;
    actions["Death"].clampWhenFinished = true;
  }

  useEffect(() => {
    actions[animation].reset().fadeIn(0.2).play();
    return () => actions[animation]?.fadeOut(0.2);
  }, [animation]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Root" position={[-0.017, 0.877, 0.169]} scale={0.306}>
          <primitive object={nodes.torso001} />
          <skinnedMesh
            name="Bond"
            geometry={nodes.Bond.geometry}
            material={materials["Material.001"]}
            skeleton={nodes.Bond.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Character_Bond.glb");
useGLTF.preload("/models/Character_Bambo.glb");
useGLTF.preload("/models/Character_Steve.glb");
useGLTF.preload("/models/Character_Zombie.glb");
